//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: stripped
//


package net.ripe.db.whois.api.whois.rdap.domain;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for role.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="role">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="technical"/>
 *     &lt;enumeration value="administrative"/>
 *     &lt;enumeration value="registrant"/>
 *     &lt;enumeration value="abuse"/>
 *     &lt;enumeration value="billing"/>
 *     &lt;enumeration value="registrar"/>
 *     &lt;enumeration value="reseller"/>
 *     &lt;enumeration value="sponsor"/>
 *     &lt;enumeration value="proxy"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "role")
@XmlEnum
@XmlJavaTypeAdapter(Role.Adapter.class)
public enum Role {

    @XmlEnumValue("technical")
    TECHNICAL("technical"),
    @XmlEnumValue("administrative")
    ADMINISTRATIVE("administrative"),
    @XmlEnumValue("registrant")
    REGISTRANT("registrant"),
    @XmlEnumValue("abuse")
    ABUSE("abuse"),
    @XmlEnumValue("billing")
    BILLING("billing"),
    @XmlEnumValue("registrar")
    REGISTRAR("registrar"),
    @XmlEnumValue("reseller")
    RESELLER("reseller"),
    @XmlEnumValue("sponsor")
    SPONSOR("sponsor"),
    @XmlEnumValue("proxy")
    PROXY("proxy");
    private final String value;

    Role(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Role fromValue(String v) {
        for (Role c: Role.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

    public static class Adapter extends XmlAdapter<String, Role> {

        @Override
        public Role unmarshal(final String value) throws Exception {
            for (Role role : Role.values()) {
                if (role.value.equals(value)) {
                    return role;
                }
            }
            throw new IllegalArgumentException(value);
        }

        @Override
        public String marshal(final Role role) throws Exception {
            return role.value;
        }
    }
}
